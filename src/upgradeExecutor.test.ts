import { it, expect } from 'vitest';

import { upgradeExecutorEncodeFunctionData } from './upgradeExecutor';

// taken from https://sepolia.arbiscan.io/tx/0x04ffbbc79439b88afb9cca3329b4ac0bc97846b251297498bee7f2a6b7c9771f
it('upgradeExecutorEncodeFunctionData', () => {
  const result = upgradeExecutorEncodeFunctionData({
    functionName: 'executeCall',
    args: [
      '0x932467a0452Cd0758d84260b9C843ef87D6Cb4Bc',
      '0xd1ce8da
    ],
  });

  expect(result).toEqual(
    '0xbca8c7b5000000000000000000000000932467a0452cd0758d84260b9c843ef87d6cb4bc00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000184d1ce8da
  );
});
