export const sequencerInboxABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_maxDataSize', internalType: 'uint256', type: 'uint256' },
      { name: 'reader4844_', internalType: 'contract IReader4844', type: 'address' },
      { name: '_isUsingFeeToken', internalType: 'bool', type: 'bool' },
    ],
  },
  { type: 'error', inputs: [], name: 'AlreadyInit' },
  {
    type: 'error',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'AlreadyValidDASKeyset',
  },
  { type: 'error', inputs: [], name: 'BadMaxTimeVariation' },
  { type: 'error', inputs: [], name: 'BadPostUpgradeInit' },
  {
    type: 'error',
    inputs: [
      { name: 'stored', internalType: 'uint256', type: 'uint256' },
      { name: 'received', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'BadSequencerNumber',
  },
  { type: 'error', inputs: [], name: 'DataBlobsNotSupported' },
  {
    type: 'error',
    inputs: [
      { name: 'dataLength', internalType: 'uint256', type: 'uint256' },
      { name: 'maxDataLength', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'DataTooLarge',
  },
  { type: 'error', inputs: [], name: 'DelayedBackwards' },
  { type: 'error', inputs: [], name: 'DelayedTooFar' },
  { type: 'error', inputs: [], name: 'Deprecated' },
  { type: 'error', inputs: [], name: 'ForceIncludeBlockTooSoon' },
  { type: 'error', inputs: [], name: 'ForceIncludeTimeTooSoon' },
  { type: 'error', inputs: [], name: 'HadZeroInit' },
  { type: 'error', inputs: [], name: 'IncorrectMessagePreimage' },
  {
    type: 'error',
    inputs: [{ name: 'name', internalType: 'string', type: 'string' }],
    name: 'InitParamZero',
  },
  {
    type: 'error',
    inputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
    name: 'InvalidHeaderFlag',
  },
  { type: 'error', inputs: [], name: 'MissingDataHashes' },
  { type: 'error', inputs: [], name: 'NativeTokenMismatch' },
  {
    type: 'error',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'NoSuchKeyset',
  },
  { type: 'error', inputs: [], name: 'NotBatchPoster' },
  {
    type: 'error',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'NotBatchPosterManager',
  },
  { type: 'error', inputs: [], name: 'NotForked' },
  { type: 'error', inputs: [], name: 'NotOrigin' },
  {
    type: 'error',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'NotOwner',
  },
  { type: 'error', inputs: [], name: 'RollupNotChanged' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'messageNum', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'InboxMessageDelivered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'messageNum', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'InboxMessageDeliveredFromOrigin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'keysetHash', internalType: 'bytes32', type: 'bytes32', indexed: true }],
    name: 'InvalidateKeyset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'OwnerFunctionCalled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'batchSequenceNumber', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'SequencerBatchData',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'batchSequenceNumber', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'beforeAcc', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'afterAcc', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'delayedAcc', internalType: 'bytes32', type: 'bytes32', indexed: false },
      {
        name: 'afterDelayedMessagesRead',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'timeBounds',
        internalType: 'struct IBridge.TimeBounds',
        type: 'tuple',
        components: [
          { name: 'minTimestamp', internalType: 'uint64', type: 'uint64' },
          { name: 'maxTimestamp', internalType: 'uint64', type: 'uint64' },
          { name: 'minBlockNumber', internalType: 'uint64', type: 'uint64' },
          { name: 'maxBlockNumber', internalType: 'uint64', type: 'uint64' },
        ],
        indexed: false,
      },
      {
        name: 'dataLocation',
        internalType: 'enum IBridge.BatchDataLocation',
        type: 'uint8',
        indexed: false,
      },
    ],
    name: 'SequencerBatchDelivered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'keysetHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'keysetBytes', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'SetValidKeyset',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BROTLI_MESSAGE_HEADER_FLAG',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DAS_MESSAGE_HEADER_FLAG',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DATA_AUTHENTICATED_FLAG',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DATA_BLOB_HEADER_FLAG',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'HEADER_LENGTH',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'TREE_DAS_MESSAGE_HEADER_FLAG',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ZERO_HEAVY_MESSAGE_HEADER_FLAG',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sequenceNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'afterDelayedMessagesRead', internalType: 'uint256', type: 'uint256' },
      { name: 'gasRefunder', internalType: 'contract IGasRefunder', type: 'address' },
      { name: 'prevMessageCount', internalType: 'uint256', type: 'uint256' },
      { name: 'newMessageCount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addSequencerL2Batch',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sequenceNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'afterDelayedMessagesRead', internalType: 'uint256', type: 'uint256' },
      { name: 'gasRefunder', internalType: 'contract IGasRefunder', type: 'address' },
      { name: 'prevMessageCount', internalType: 'uint256', type: 'uint256' },
      { name: 'newMessageCount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addSequencerL2BatchFromBlobs',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'contract IGasRefunder', type: 'address' },
    ],
    name: 'addSequencerL2BatchFromOrigin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sequenceNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'afterDelayedMessagesRead', internalType: 'uint256', type: 'uint256' },
      { name: 'gasRefunder', internalType: 'contract IGasRefunder', type: 'address' },
      { name: 'prevMessageCount', internalType: 'uint256', type: 'uint256' },
      { name: 'newMessageCount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addSequencerL2BatchFromOrigin',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'batchCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'batchPosterManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'bridge',
    outputs: [{ name: '', internalType: 'contract IBridge', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'dasKeySetInfo',
    outputs: [
      { name: 'isValidKeyset', internalType: 'bool', type: 'bool' },
      { name: 'creationBlock', internalType: 'uint64', type: 'uint64' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_totalDelayedMessagesRead', internalType: 'uint256', type: 'uint256' },
      { name: 'kind', internalType: 'uint8', type: 'uint8' },
      { name: 'l1BlockAndTime', internalType: 'uint64[2]', type: 'uint64[2]' },
      { name: 'baseFeeL1', internalType: 'uint256', type: 'uint256' },
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'messageDataHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'forceInclusion',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'ksHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getKeysetCreationBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'inboxAccs',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'bridge_', internalType: 'contract IBridge', type: 'address' },
      {
        name: 'maxTimeVariation_',
        internalType: 'struct ISequencerInbox.MaxTimeVariation',
        type: 'tuple',
        components: [
          { name: 'delayBlocks', internalType: 'uint256', type: 'uint256' },
          { name: 'futureBlocks', internalType: 'uint256', type: 'uint256' },
          { name: 'delaySeconds', internalType: 'uint256', type: 'uint256' },
          { name: 'futureSeconds', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'ksHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'invalidateKeysetHash',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isBatchPoster',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isSequencer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isUsingFeeToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'ksHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isValidKeysetHash',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxDataSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxTimeVariation',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'postUpgradeInit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reader4844',
    outputs: [{ name: '', internalType: 'contract IReader4844', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'removeDelayAfterFork',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'rollup',
    outputs: [{ name: '', internalType: 'contract IOwnable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newBatchPosterManager', internalType: 'address', type: 'address' }],
    name: 'setBatchPosterManager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'isBatchPoster_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setIsBatchPoster',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'isSequencer_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setIsSequencer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'maxTimeVariation_',
        internalType: 'struct ISequencerInbox.MaxTimeVariation',
        type: 'tuple',
        components: [
          { name: 'delayBlocks', internalType: 'uint256', type: 'uint256' },
          { name: 'futureBlocks', internalType: 'uint256', type: 'uint256' },
          { name: 'delaySeconds', internalType: 'uint256', type: 'uint256' },
          { name: 'futureSeconds', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'setMaxTimeVariation',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keysetBytes', internalType: 'bytes', type: 'bytes' }],
    name: 'setValidKeyset',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalDelayedMessagesRead',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'updateRollupAddress',
    outputs: [],
  },
] as const;
