const glob = require('glob')
const { readFile, writeFile, unlink, renameSync } = require('fs')

// The index file automatically generated by typedoc-plugin-markdown
// only contains the list of modules of the package.
// We'll add an introduction paragraph to that index file
// and use metadata to place it in the first position.
const indexIntroContents = `---
sidebar_position: 1
---

# Arbitrum Orbit SDK

[Arbitrum Orbit SDK](https://github.com/OffchainLabs/arbitrum-sdk) TODO
        
Below is a list of modules of the library. See the [examples](https://github.com/OffchainLabs/arbitrum-orbit-sdk/tree/main/examples) for further examples of how to use these classes.
`

// Traverse all typedoc generated md files
glob('./docs/**/*', function (err, res) {
  if (err) {
    console.log('Error', err)
  } else {
    for (const path of res) {
      if (!path.endsWith('.md')) continue

      // Set the new index file
      if (path.includes('modules.md')) {
        // Renaming the file to serve it as the index
        const indexPath = path.replace('modules', 'index')
        renameSync(path, indexPath, function (err) {
          if (err) {
            console.log(err)
            return
          }
        })

        // Modifying the file contents
        //  - Remove the automatically generated title
        //  - Add metadata, a new title + an intro text
        readFile(indexPath, 'utf-8', function (err, contents) {
          if (err) {
            console.log(err)
            return
          }

          // Remove the automatically generated title
          const [, ...linesWithoutFirstLine] = contents.split('\n')
          const newFileContent = linesWithoutFirstLine.join('\n').trim()

          // Write the updated contents to the file
          writeFile(
            indexPath,
            `${indexIntroContents}\n${newFileContent}`,
            'utf-8',
            function (err) {
              if (err) console.warn('Error', err)
            }
          )
        })
        continue
      }

      // Traverse all files
      readFile(path, 'utf-8', function (err, contents) {
        if (err) {
          console.log(err)
          return
        }

        // Fix JSX md rendering breaking tags (only <T> tags break docusaurus, so we keep the rest):
        const replaced = contents.replace(/<T>/g, '&lt;T&gt;')
        writeFile(path, replaced, 'utf-8', function (err) {
          if (err) console.warn('Error', err)
        })
      })
    }
  }
})